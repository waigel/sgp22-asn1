plugins {
    id "idea"
    id "java-library"
    id "maven-publish"
    id "signing"
    id "com.diffplug.spotless" version "6.12.1"
    id "org.openrewrite.rewrite" version "5.34.0"
}

configurations {
    tool
}

group = 'com.waigel.sgp22.asn1'
version = '1.0.1'
sourceCompatibility = 1.8
targetCompatibility = 1.8


repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    tool 'com.github.waigel:asn1bean:4587827'
    implementation 'com.beanit:asn1bean:1.13.0'
}

rewrite {
    activeRecipe("org.openrewrite.java.OrderImports")
    activeRecipe("org.openrewrite.java.RemoveUnusedImports")
    activeRecipe("org.openrewrite.java.format.AutoFormat")
    activeRecipe("org.openrewrite.java.cleanup.AddSerialVersionUidToSerializable")
    activeRecipe("org.openrewrite.java.cleanup.FixSerializableFields")
}

spotless {
    java {
        target 'src/*/java/**/*.java'
        googleJavaFormat()

    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

task genAsn1(type: JavaExec) {
    mainClass = 'com.beanit.asn1bean.compiler.Compiler'
    args "-o", "$projectDir/src/main/java", "-dv", "-p", "com.waigel.sgp22.asn1", "-f", "$projectDir/asn1/PKIXExplicit88.asn", "$projectDir/asn1/PKIXImplicit88.asn", "$projectDir/asn1/GSMA-SGP.22-v2.2.asn"
    classpath configurations.tool
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

publishing {
    repositories {
        maven {
            def releaseRepo = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotRepo = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = isReleaseVersion ? releaseRepo : snapshotRepo
            credentials {
                username = findProperty("ossrhUsername") ?: System.getenv("OSSRH_USERNAME")
                password = findProperty("ossrhPassword") ?: System.getenv("OSSRH_PASSWORD")
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                groupId = 'com.waigel.sgp22.asn1'
                name = 'sgp22-asn1'
                description = 'Contains the SGP22-v2.2 ASN.1 definitions and the generated Java classes'
                url = 'https://github.com/waigel/sgp22-asn1'
                packaging = 'jar'

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://github.com/waigel/sgp22-asn1/blob/main/LICENSE'
                    }
                }

                scm {
                    url = 'https://github.com/waigel/sgp22-asn1'
                    connection = 'scm:git://github.com:waigel/sgp22-asn1.git'
                    developerConnection = 'scm:git://github.com:waigel/sgp22-asn1r.git'
                }

                developers {
                    developer {
                        id = 'waigel'
                        name = 'Johannes Waigel'
                        email = 'johannes@waigel.com'
                    }
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

tasks.withType(Sign) {
    onlyIf { isReleaseVersion }
}